@model List<Order>

<div class="card shadow border-0 my-4">
    <div class="card-header bg-secondary bg-gradient py-3">
        <div class="row">
            <div class="col-12 text-center">
                <h2 class="text-white py-2">List Orders</h2>
            </div>
        </div>
    </div>
    <div class="card-body">
        <div class="card mb-4">
            <div class="card-body">
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-floating mb-3">
                            <input type="text" class="form-control" id="patientName" value="@Model.FirstOrDefault()?.Patient.FullName" disabled />
                            <label for="patientName">Name</label>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-floating mb-3">
                            <input type="text" class="form-control" id="idNumber" value="@Model.FirstOrDefault()?.Patient.IdNumber" disabled />
                            <label for="idNumber">ID Number</label>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-floating mb-3">
                            <input type="text" class="form-control" id="patientGender" value="@Model.FirstOrDefault()?.Patient.Gender" disabled />
                            <label for="patientGender">Gender</label>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-floating mb-3">
                            <input type="text" class="form-control" id="contactNumber" value="@Model.FirstOrDefault()?.Patient.ContactNumber" disabled />
                            <label for="contactNumber">Contact Number</label>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="card-body p-4">
   


            <table id="tblData" class="table table-bordered table-striped" style="width:100%">
                <thead>
                    <tr>
                        <th>Order Number</th>
                        <th>Anaesthesiologist</th>
                        <th>Medication</th>
                        <th>Quantity</th>
                        <th>Status</th>
                        <th>IsUrgent</th>
                        <th>Ignore Reason</th>
                        <th>Action</th>
                    </tr>
                </thead>
            </table>
        </div>
    </div>
</div>

@section Scripts {
    <script src="//cdn.datatables.net/1.13.3/js/jquery.dataTables.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@10"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.js"></script>
    <script>
        var dataTable;

        $(document).ready(function () {
            loadDataTable();
        });

        function loadDataTable() {
            var patientId = @Html.Raw(ViewBag.PatientId);

            dataTable = $('#tblData').DataTable({
                "ajax": {
                    url: '@Url.Action("GetPatientOrder", "Pharmacist")/' + patientId, 
                    dataSrc: 'data'
                },
                "columns": [
                    { data: 'orderId', "width": "5%" },
                    { data: 'anaesthesiologist', "width": "15%" },
                    {
                        data: 'medicationOrders', "width": "15%", "render": function (data) {
                            return data.map(order => order.name).join('<br>');
                        }
                    },
                    {
                        data: 'medicationOrders', "width": "10%", "render": function (data) {
                            return data.map(order => order.quantity).join('<br>');
                        }
                    },
                    { data: 'status', "width": "10%" },
                    {
                        data: 'isUrgent', "width": "5%", "render": function (data) {
                            return data === "Yes" ? `<span class="text-danger">${data}</span>` : data;
                        }
                    },
                    { data: 'ignoreReason', "width": "20%" },

                    {
                        data: 'orderId', "width": "10%", "render": function (data, type, row) {
                            if (row.status !== "Dispensed" && row.status !== "Rejected" && row.status !== "Received") {
                                return `<a href="#" class="btn btn-primary mx-1 dispense-medication" data-order-id="${data}"> <i class="bi bi-pencil-square"></i> Dispense</a>`;
                            }
                            return '';
                        }
                    }
                ]
            });

            $('#tblData').on('click', '.dispense-medication', function (e) {
                e.preventDefault();

                var orderId = $(this).data('order-id');

                $.ajax({
                    url: '@Url.Action("DispenseMedicationOrder", "Pharmacist")', 

                    type: 'POST',
                    data: { orderId: orderId },
                    success: function (response) {
                        if (response.interactionMessage) {
                            handleInteractionAlert(response.interactionMessage);
                        }
                        else if (response.contraIndicationMessage) {
                            handleContraIndicationAlert(response.contraIndicationMessage);
                        }
                        else if (response.errorMessage) {
                            handleAllergenAlert(response.errorMessage, orderId);
                        }
                      else {
                        window.location.href = '@Url.Action("DispenseMedicationOrder", "Pharmacist")?orderId=' + orderId;
                    }

                    },
                    error: function () {
                        toastr.error("Error checking medication conflicts.");
                    }
                });
            });
        }


        function handleAllergenAlert(errorMessage, orderId) {
            Swal.fire({
                title: 'Alert',
                text: errorMessage,
                icon: 'warning',
                showCancelButton: true,
                confirmButtonText: 'Ignore',
                cancelButtonText: 'Cancel'
            }).then((result) => {
                if (result.isConfirmed) {
                    Swal.fire({
                        title: 'Reason for Ignoring',
                        input: 'textarea',
                        inputPlaceholder: 'Enter the reason...',
                        inputAttributes: {
                            'aria-label': 'Enter the reason'
                        },
                        showCancelButton: true,
                        confirmButtonText: 'Submit'
                    }).then((result) => {
                        if (result.isConfirmed) {
                            $.ajax({
                                url: '@Url.Action("DispenseMedicationOrder", "Pharmacist")', 

                                type: 'POST',
                                data: {
                                    orderId: orderId,
                                    ignoreReason: result.value
                                },
                                success: function () {

                                    window.location.href = '@Url.Action("ListDispancedMedicationOrder", "Pharmacist")';

                                },
                                error: function () {
                                    toastr.error("Error while dispensing medication.");
                                }
                            });
                        }
                    });
                }
            });
        }


    </script>
}
